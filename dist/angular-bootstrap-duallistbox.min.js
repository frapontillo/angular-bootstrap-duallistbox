/**
 * angular-bootstrap-duallistbox
 * @version v0.1.1 - 2018-05-15
 * @author Francesco Pontillo (francescopontillo@gmail.com)
 * @link https://github.com/frapontillo/angular-bootstrap-duallistbox
 * @license Apache License 2.0
**/

"use strict";angular.module("frapontillo.bootstrap-duallistbox",[]),angular.module("frapontillo.bootstrap-duallistbox").directive("bsDuallistbox",["$compile","$timeout",function($compile,$timeout){return{restrict:"A",require:"ngModel",link:function link(scope,element,attrs){var NG_OPTIONS_REGEXP=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,collection=attrs.ngOptions.match(NG_OPTIONS_REGEXP)[7],getBooleanValue=function(a){return!0===a||"true"===a},attributes={clickSelect:{changeFn:"clickSelect",defaultValue:null},bootstrap2:{changeFn:"setBootstrap2Compatible",transformFn:getBooleanValue},postfix:"setHelperSelectNamePostfix",selectMinHeight:{changeFn:"setSelectOrMinimalHeight",defaultValue:100},filter:{changeFn:"setShowFilterInputs",defaultValue:!0,transformFn:getBooleanValue},filterClear:{changeFn:"setFilterTextClear",defaultValue:"show all"},filterPlaceholder:"setFilterPlaceHolder",filterValues:{changeFn:"setFilterOnValues",transformFn:getBooleanValue},moveOnSelect:{changeFn:"setMoveOnSelect",defaultValue:!0,transformFn:getBooleanValue},preserveSelection:"setPreserveSelectionOnMove",moveSelectedLabel:"setMoveSelectedLabel",moveAllLabel:"setMoveAllLabel",removeSelectedLabel:"setRemoveSelectedLabel",removeAllLabel:"setRemoveAllLabel",selectedListLabel:"setSelectedListLabel",nonSelectedListLabel:"setNonSelectedListLabel",infoAll:{changeFn:"setInfoText",defaultValue:"Showing all {0}"},infoFiltered:{changeFn:"setInfoTextFiltered",defaultValue:'<span class="label label-warning">Filtered</span> {0} from {1}'},infoEmpty:{changeFn:"setInfoTextEmpty",defaultValue:"Empty list"}},dualListBox,getAttributeValueOrDefault=function(a){var b,c,d=attributes[a],e=attrs[a];return angular.isObject(d)&&(b=d.defaultValue,c=d.transformFn),e||(e=b),angular.isFunction(c)&&(e=c(e)),e},getAttributeChangeFunction=function(a){var b=attributes[a],c=b;return angular.isObject(b)&&(c=b.changeFn),c},listenToModel=function(){scope.$watch(attrs.ngModel,function(){initMaybe(),refresh()}),scope.$watch(collection,refresh,!0),scope.$watch(attrs.filterNonSelected,function(){refresh()}),scope.$watch(attrs.filterSelected,function(){refresh()}),angular.forEach(attributes,function(a,b){attrs.$observe(b,function(){var a=getAttributeChangeFunction(b),c=getAttributeValueOrDefault(b);element.bootstrapDualListbox(a,c,!0)})})},refresh=function(){$timeout(function(){element.bootstrapDualListbox("refresh")})},initMaybe=function(){dualListBox||init()},init=function(){var defaults={};angular.forEach(attributes,function(a,b){var c=getAttributeValueOrDefault(b);defaults[b]=c}),dualListBox=element.bootstrapDualListbox({bootstrap2Compatible:defaults.bootstrap2,filterTextClear:defaults.filterClear,filterPlaceHolder:defaults.filterPlaceholder,moveSelectedLabel:defaults.moveSelectedLabel,moveAllLabel:defaults.moveAllLabel,removeSelectedLabel:defaults.removeSelectedLabel,removeAllLabel:defaults.removeAllLabel,moveOnSelect:defaults.moveOnSelect,preserveSelectionOnMove:defaults.preserveSelection,selectedListLabel:defaults.selectedListLabel,nonSelectedListLabel:defaults.nonSelectedListLabel,helperSelectNamePostfix:defaults.postfix,selectOrMinimalHeight:defaults.selectMinHeight,showFilterInputs:defaults.filter,nonSelectedFilter:"",selectedFilter:"",infoText:defaults.infoAll,infoTextFiltered:defaults.infoFiltered,infoTextEmpty:defaults.infoEmpty,filterOnValues:defaults.filterValues}),defaults.clickSelect&&eval("scope."+defaults.clickSelect)&&dualListBox.on("click",function(e){e.target.value&&("function"===eval("typeof scope."+defaults.clickSelect)?eval("scope."+defaults.clickSelect)(eval(e.target.value)):eval("scope."+defaults.clickSelect+"="+eval(e.target.value)))});var container=element.bootstrapDualListbox("getContainer");defaults.clickSelect&&eval("scope."+defaults.clickSelect)&&container.on("click",function(e){e.target.value&&("function"===eval("typeof scope."+defaults.clickSelect)?eval("scope."+defaults.clickSelect)(eval(e.target.value)):eval("scope."+defaults.clickSelect+"="+eval(e.target.value)))});var filterNonSelectedInput=container.find(".box1 .filter");filterNonSelectedInput.attr("ng-model",attrs.filterNonSelected),$compile(filterNonSelectedInput)(scope);var filterSelectedInput=container.find(".box2 .filter");filterSelectedInput.attr("ng-model",attrs.filterSelected),$compile(filterSelectedInput)(scope)};listenToModel(),scope.$on("$destroy",function(){element.bootstrapDualListbox("destroy")})}}}]);